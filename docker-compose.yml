# This will serve as a common file to be used with both docker-compose.dev.yml and docker-compose.prod.yml
services:
  node-app:
    # container_name: docker-node-express-container
    image: 22omar/docker-node-express-2
    # build: .
    # build: ./Dockerfile.dev # this will build the image from the Dockerfile.dev
    # ports:
    #   - "4000:4000"
    env_file:
      - ./.env
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
    depends_on:
      - postgres

  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - node-app

  postgres:
    image: postgres
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: example
  
  redis:
    image: redis

  # mongo:
  #   image: mongo
  #   restart: always
  #   volumes:
  #     - mongo-data:/data/db
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  #     ME_CONFIG_BASICAUTH: false


volumes:
  # mongo-data:
  postgres-data:
